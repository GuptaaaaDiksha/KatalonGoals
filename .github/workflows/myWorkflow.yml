name: Katalon Test Execution

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  katalon-test:
    runs-on: ubuntu-latest

    env:
      KATALON_VERSION: 9.2.0
      KATALON_PROJECT_PATH: DemoTest.prj
      KATALON_TEST_SUITE: "Test Suites/DemoSuite"
      BROWSER: "Chrome (headless)"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Debug â€” show workspace & version vars
        run: |
          echo "GITHUB_WORKSPACE = $GITHUB_WORKSPACE"
          echo "KATALON_VERSION = $KATALON_VERSION"
          echo "Expected Katalon engine directory: $GITHUB_WORKSPACE/Katalon_Studio_Engine_Linux_64-$KATALON_VERSION"
          ls -la $GITHUB_WORKSPACE

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip curl jq xvfb libxi6 libnss3 libxml2-utils

      - name: Get latest Chrome version
        id: chrome_version
        run: |
          LATEST_VERSION=$(curl -s https://googlechromelabs.github.io/chrome-for-testing/last-known-good-versions.json | jq -r '.channels.Stable.version')
          echo "CHROME_VERSION=$LATEST_VERSION" >> $GITHUB_ENV
          echo "Chrome version set to $LATEST_VERSION"

      - name: Install Chrome and ChromeDriver
        run: |
          echo "Downloading Chrome"
          curl -sL -o chrome.zip "https://storage.googleapis.com/chrome-for-testing-public/$CHROME_VERSION/linux64/chrome-linux64.zip"
          unzip chrome.zip
          sudo mv chrome-linux64 /opt/google/chrome
          sudo ln -sf /opt/google/chrome/chrome /usr/bin/google-chrome

          echo "Downloading ChromeDriver"
          curl -sL -o chromedriver.zip "https://storage.googleapis.com/chrome-for-testing-public/$CHROME_VERSION/linux64/chromedriver-linux64.zip"
          unzip chromedriver.zip
          chmod +x chromedriver-linux64/chromedriver
          sudo mv chromedriver-linux64/chromedriver /usr/local/bin/chromedriver

      - name: Download and extract Katalon Studio Engine
        run: |
          echo "Downloading Katalon Studio Engine version $KATALON_VERSION"
          wget -q https://github.com/katalon-studio/katalon-studio/releases/download/v$KATALON_VERSION/Katalon_Studio_Engine_Linux_64-$KATALON_VERSION.tar.gz
          tar -xzf Katalon_Studio_Engine_Linux_64-$KATALON_VERSION.tar.gz
          ls -la $GITHUB_WORKSPACE/Katalon_Studio_Engine_Linux_64-$KATALON_VERSION

      - name: Run Katalon Test Suite
        run: |
          KATALON_DIR="$GITHUB_WORKSPACE/Katalon_Studio_Engine_Linux_64-$KATALON_VERSION"
          chmod +x "$KATALON_DIR/katalonc"

          "$KATALON_DIR/katalonc" -noSplash \
            -runMode=console \
            -projectPath="$GITHUB_WORKSPACE/$KATALON_PROJECT_PATH" \
            -retry=0 \
            -testSuitePath="$KATALON_TEST_SUITE" \
            -executionProfile=default \
            -browserType="$BROWSER" \
            -apiKey="${{ secrets.KATALON_API_KEY }}" \
            --config webui.driver.chrome.path=/usr/local/bin/chromedriver \
            --config webui.autoUpdateDrivers=true

      - name: Show test summary
        run: |
          REPORT_DIR=$(find $GITHUB_WORKSPACE/Reports -type d -name "*DemoSuite*" | sort | tail -1)
          echo "Looking at reports in: $REPORT_DIR"

          if [ -f "$REPORT_DIR/JUnit_Report.xml" ]; then
            TESTS=$(xmllint --xpath "string(/testsuite/@tests)" $REPORT_DIR/JUnit_Report.xml)
            FAILURES=$(xmllint --xpath "string(/testsuite/@failures)" $REPORT_DIR/JUnit_Report.xml)
            ERRORS=$(xmllint --xpath "string(/testsuite/@errors)" $REPORT_DIR/JUnit_Report.xml)
            SKIPPED=$(xmllint --xpath "string(/testsuite/@skipped)" $REPORT_DIR/JUnit_Report.xml)
            PASSED=$((TESTS - FAILURES - ERRORS - SKIPPED))

            echo "===================="
            echo " Test Summary"
            echo "===================="
            echo " Total:   $TESTS"
            echo " Passed:  $PASSED"
            echo " Failed:  $FAILURES"
            echo " Errors:  $ERRORS"
            echo " Skipped: $SKIPPED"
            echo "===================="
          else
            echo "JUnit_Report.xml not found!"
          fi

      - name: Archive Reports
        uses: actions/upload-artifact@v4
        with:
          name: katalon-reports
          path: $GITHUB_WORKSPACE/Reports/**
